{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app/js/GameEventsInterface.js","webpack:///./app/common/blocks/timer/Timer.js","webpack:///./app/js/Card.js","webpack:///./app/js/GameField.js","webpack:///./app/js/Game.js","webpack:///./app/js/whenReady.js","webpack:///./app/js/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","GameInterfaceEvents","elements","game","_classCallCheck","this","authorizationField","gameRulesModalWindow","winnerModalWindow","userProfile","exitGameBtn","gameRulesBtn","shirtsList","difficultysList","scoreTable","showWinnerModalWindow","bind","signIn","selectUserProfileOptions","selectGameOptions","addEventListener","querySelector","event","target","difficultysItemClassName","className","shirtsItemClassName","selectedItem","closest","gameOptionName","parentNode","activeItemStyleName","classList","remove","add","document","changeGameSettings","responsibleItemDOM","settings","gameField","width","dataset","countOfColumns","height","countOfRows","restart","setShirtCard","shirtName","action","signOut","user","firstName","secondName","email","localStorage","setItem","JSON","stringify","profileLinkUserFullName","parse","getItem","appendChild","createTextNode","style","visibility","saveUserCredentials","showUserProfile","removeItem","firstChild","gameTimer","hide","gameFieldDOM","showAuthorizationField","scoreList","length","addGameResult","number","fullName","_ref","score","time","row","tBodies","insertRow","insertCell","innerHTML","scoreTableDOM","easy","medium","hard","nightmare","ms","push","onOutput","sort","a","b","pop","body","changeModalWindowState","stateName","flag","playAgainBtnHandler","results","modalWindow","_ref2","state","_this","updateScoreList","setTimeout","Timer","timerDOM","delay","isOn","interval","offset","setInterval","update","Date","now","clearInterval","console","log","stop","reset","timePassed","delta","formattedTime","timeFormater","textContent","minutes","getMinutes","toString","seconds","getSeconds","milliseconds","getMilliseconds","Card","cardDOM","setAnimation","firstShow","_this2","animation","offsetWidth","undefined","toggle","GameField","cardShortName","countOfCards","cardTocompare","_Timer2","default","getElementsByClassName","gamePause","imgs","cardPattern","createElement","animationStyle","generateRandomValues","forEach","unickNumber","cloneNode","clickOnCard","isItfirstClick","selectedCardDOM","selectedCardStyleClass","selectedCardStyle","slice","indexOf","selectedCard","_Card2","flip","setPause","showAndHide","_GameEventsInterface2","winningHandler","_this3","start","runGameTimer","compare","parentElement","Array","from","v","k","Math","floor","random","type","getElementsByTagName","item","index","rule","sheet","insertRule","setProperty","_GameField","Game","difficulty","difficultysInf","createGameField","generateCardsStyles","_GameField2","fill","whenReady","funcs","ready","handler","e","readyState","window","attachEvent","f","_whenReady2","_Game2","gameInterfaceEvents","getElementById","import","initGameRulesModalWindow","initWinnerModalWindow","initScoreList","Promise","resolve","preventDefault","then"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/build/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","class GameInterfaceEvents {\r\n  constructor(elements, game) {\r\n    ({\r\n      authorizationField: this.authorizationField,\r\n      gameRulesModalWindow: this.gameRulesModalWindow,\r\n      winnerModalWindow: this.winnerModalWindow,\r\n      userProfile: this.userProfile,\r\n      exitGameBtn: this.exitGameBtn,\r\n      gameRulesBtn: this.gameRulesBtn,\r\n      shirtsList: this.shirtsList,\r\n      difficultysList: this.difficultysList,\r\n      scoreTable: this.scoreTable,\r\n    } = elements);\r\n    this.game = game;\r\n\r\n    this.showWinnerModalWindow = this.showWinnerModalWindow.bind(this);\r\n    this.signIn = this.signIn.bind(this);\r\n    this.selectUserProfileOptions = this.selectUserProfileOptions.bind(this);\r\n\r\n    this.selectGameOptions = this.selectGameOptions.bind(this);\r\n    this.shirtsList.addEventListener('click', this.selectGameOptions);\r\n    this.difficultysList.addEventListener('click', this.selectGameOptions);\r\n\r\n    this.userProfile\r\n      .querySelector('.user_profile_menu')\r\n      .addEventListener('click', this.selectUserProfileOptions);\r\n  }\r\n\r\n  selectGameOptions(event) {\r\n    const { target } = event;\r\n    const difficultysItemClassName = `.${this.difficultysList.className}__item`;\r\n    const shirtsItemClassName = `.${this.shirtsList.className}__item  `;\r\n    const selectedItem =\r\n      target.closest(difficultysItemClassName) || target.closest(shirtsItemClassName);\r\n\r\n    if (selectedItem) {\r\n      const gameOptionName = selectedItem.parentNode.className;\r\n      const activeItemStyleName = `${gameOptionName}__item--active`;\r\n\r\n      const currentActiveItem = selectedItem.parentNode.querySelector(`.${activeItemStyleName}`);\r\n      currentActiveItem.classList.remove(activeItemStyleName);\r\n      selectedItem.classList.add(activeItemStyleName);\r\n\r\n      // если игра уже запущена - меняем настройки игры\r\n      if (document.querySelector('.game_field') !== null) {\r\n        this.changeGameSettings(gameOptionName);\r\n      }\r\n    }\r\n  }\r\n\r\n  changeGameSettings(gameOptionName) {\r\n    const responsibleItemDOM = document.querySelector(`.${gameOptionName}__item--active`);\r\n    switch (gameOptionName) {\r\n      case 'difficultys':\r\n        this.game.settings.gameField.width = responsibleItemDOM.dataset.countOfColumns;\r\n        this.game.settings.gameField.height = responsibleItemDOM.dataset.countOfRows;\r\n        this.game.restart();\r\n        break;\r\n      case 'shirts':\r\n        this.game.gameField.setShirtCard(responsibleItemDOM.dataset.shirtName);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  selectUserProfileOptions(event) {\r\n    const { target } = event;\r\n    const selectedOption = target.closest('.profile_menu_link');\r\n\r\n    switch (selectedOption.dataset.action) {\r\n      case 'signOut':\r\n        this.signOut();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  saveUserCredentials() {\r\n    const firstName = this.authorizationField.querySelector('.firstName-field').value;\r\n    const secondName = this.authorizationField.querySelector('.secondName-field').value;\r\n    const email = this.authorizationField.querySelector('.email-field').value;\r\n\r\n    const user = {\r\n      firstName,\r\n      secondName,\r\n      email,\r\n    };\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n  }\r\n\r\n  showUserProfile() {\r\n    const profileLinkUserFullName = this.userProfile.querySelector('.profile_link__user_fullName');\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    profileLinkUserFullName.appendChild(document.createTextNode(`${user.firstName} ${user.secondName}`));\r\n    this.userProfile.style.visibility = 'visible';\r\n  }\r\n\r\n  showAuthorizationField() {\r\n    document.querySelector('.game-lobby').appendChild(this.authorizationField);\r\n  }\r\n\r\n  // closeGame() {\r\n  //   window.open('', '_self').close();\r\n  // }\r\n\r\n  signIn() {\r\n    // event.preventDefault(); // disable page refreshing\r\n    this.saveUserCredentials();\r\n    this.showUserProfile();\r\n    this.authorizationField.remove();\r\n  }\r\n\r\n  signOut() {\r\n    localStorage.removeItem('user');\r\n    this.userProfile.querySelector('.profile_link__user_fullName').firstChild.remove();\r\n    this.userProfile.style.visibility = 'hidden';\r\n    this.game.gameField.gameTimer.hide();\r\n    this.game.gameField.gameFieldDOM.remove();\r\n    this.showAuthorizationField();\r\n  }\r\n\r\n  initScoreList() {\r\n    const scoreList = JSON.parse(localStorage.getItem('scoreList'));\r\n    if (scoreList) {\r\n      for (let i = 0; i < scoreList.length; i++) {\r\n        this.addGameResult.call(this.scoreTable, scoreList[i], i);\r\n      }\r\n    } else {\r\n      localStorage.setItem('scoreList', JSON.stringify([]));\r\n    }\r\n  }\r\n\r\n  addGameResult({ fullName, score, time }, number) {\r\n    // this = scoreTableDOM\r\n    const row = this.tBodies[0].insertRow(number);\r\n    const cellFullName = row.insertCell(0);\r\n    cellFullName.innerHTML = fullName;\r\n    const cellScore = row.insertCell(1);\r\n    cellScore.innerHTML = score;\r\n    const cellTime = row.insertCell(2);\r\n    cellTime.innerHTML = time;\r\n  }\r\n\r\n  updateScoreList(time) {\r\n    const scoreTableDOM = document.querySelector('.score_table');\r\n\r\n    const factors = {\r\n      easy: 10,\r\n      medium: 20,\r\n      hard: 30,\r\n      nightmare: 40,\r\n    };\r\n    const difficulty = document.querySelector('.difficultys__item--active').dataset.value;\r\n    const x = factors[difficulty];\r\n    const y = time.ms / 3600000;\r\n    const score = ~~(x / y);\r\n\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    const fullName = `${user.firstName} ${user.secondName}`;\r\n    const scoreList = JSON.parse(localStorage.getItem('scoreList'));\r\n\r\n    scoreList.push({ time: time.onOutput, score, fullName });\r\n    scoreList.sort((a, b) => b.score - a.score);\r\n    if (scoreList.length > 10) scoreList.pop();\r\n    scoreTableDOM.tBodies[0].innerHTML = '';\r\n    for (let i = 0; i < scoreList.length; i++) {\r\n      this.addGameResult.call(scoreTableDOM, scoreList[i], i);\r\n    }\r\n\r\n    localStorage.setItem('scoreList', JSON.stringify(scoreList));\r\n    return score;\r\n  }\r\n\r\n  initGameRulesModalWindow() {\r\n    document.body.appendChild(this.gameRulesModalWindow);\r\n    this.gameRulesBtn.addEventListener(\r\n      'click',\r\n      this.changeModalWindowState.bind(this.gameRulesModalWindow, {\r\n        stateName: 'expand',\r\n        flag: 'open',\r\n      }),\r\n    );\r\n    this.gameRulesModalWindow.addEventListener(\r\n      'click',\r\n      this.changeModalWindowState.bind(this.gameRulesModalWindow, {\r\n        stateName: 'collapse',\r\n        flag: 'close',\r\n      }),\r\n    );\r\n  }\r\n\r\n  initWinnerModalWindow() {\r\n    document.body.appendChild(this.winnerModalWindow);\r\n    this.winnerModalWindow\r\n      .querySelector('.play_again_btn')\r\n      .addEventListener('click', this.playAgainBtnHandler.bind(this));\r\n  }\r\n\r\n  playAgainBtnHandler() {\r\n    this.changeModalWindowState.call(this.winnerModalWindow, {\r\n      stateName: 'runaway',\r\n      flag: 'close',\r\n    });\r\n    this.game.restart();\r\n  }\r\n\r\n  showWinnerModalWindow(results) {\r\n    const { score, time } = results;\r\n    const modalWindow = document.querySelector('.modal_window--winner');\r\n    modalWindow.querySelector('.results_time').innerHTML = time;\r\n    modalWindow.querySelector('.results_score').innerHTML = score;\r\n    this.changeModalWindowState.call(modalWindow, {\r\n      stateName: 'run',\r\n      flag: 'open',\r\n    });\r\n  }\r\n\r\n  // stateName - название анимации(на открытие/закрытие), flag - открыть/закрыть\r\n  changeModalWindowState({ stateName, flag }) {\r\n    this.dataset.state = stateName;\r\n    switch (flag) {\r\n      case 'open':\r\n        document.body.classList.add('modal-active');\r\n        break;\r\n      case 'close':\r\n        document.body.classList.remove('modal-active');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  winningHandler(time) {\r\n    const score = this.updateScoreList(time);\r\n    setTimeout(() => {\r\n      this.showWinnerModalWindow({ time: time.onOutput, score });\r\n    }, 1500);\r\n  }\r\n}\r\n\r\nexport default GameInterfaceEvents;\r\n","class Timer {\r\n  constructor(timerDOM, delay) {\r\n    this.timerDOM = timerDOM;\r\n    this.delay = delay;\r\n    this.isOn = false;\r\n    this.time = 0;\r\n    this.interval = null;\r\n    this.offset = null;\r\n  }\r\n\r\n  start() {\r\n    if (!this.isOn) {\r\n      this.timerDOM.style.visibility = 'visible';\r\n      this.interval = setInterval(() => this.update(), this.delay);\r\n      this.offset = Date.now();\r\n      this.isOn = true;\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    if (this.isOn) {\r\n      clearInterval(this.interval);\r\n      this.interval = null;\r\n      this.isOn = false;\r\n    }\r\n  }\r\n\r\n  hide() {\r\n    console.log('timer');\r\n    this.stop();\r\n    this.reset();\r\n    this.timerDOM.style.visibility = 'hidden';\r\n  }\r\n\r\n  reset() {\r\n    this.time = 0;\r\n    this.update();\r\n  }\r\n\r\n  delta() {\r\n    const now = Date.now();\r\n    const timePassed = now - this.offset;\r\n    this.offset = now;\r\n    return timePassed;\r\n  }\r\n\r\n  update() {\r\n    if (this.isOn) this.time += this.delta();\r\n    const formattedTime = this.timeFormater();\r\n    this.timerDOM.textContent = formattedTime;\r\n  }\r\n\r\n  timeFormater() {\r\n    const time = new Date(this.time);\r\n    let minutes = time.getMinutes().toString();\r\n    let seconds = time.getSeconds().toString();\r\n    let milliseconds = time.getMilliseconds().toString();\r\n\r\n    if (minutes.length < 2) {\r\n      minutes = `0${minutes}`;\r\n    }\r\n\r\n    if (seconds.length < 2) {\r\n      seconds = `0${seconds}`;\r\n    }\r\n\r\n    while (milliseconds.length < 3) {\r\n      milliseconds = `0${milliseconds}`;\r\n    }\r\n\r\n    return `${minutes} : ${seconds} . ${milliseconds}`;\r\n  }\r\n\r\n  toString() {\r\n    return this.timeFormater();\r\n  }\r\n}\r\n\r\nexport default Timer;\r\n","class Card {\r\n  constructor(value, cardDOM) {\r\n    this.value = value; // уникальное значение карточки\r\n    this.cardDOM = cardDOM;\r\n  }\r\n\r\n  flip() {\r\n    this.setAnimation('flip');\r\n  }\r\n\r\n  showAndHide() {\r\n    setTimeout(() => {\r\n      this.setAnimation('flip');\r\n    }, 500);\r\n    this.setAnimation('flip');\r\n  }\r\n\r\n  remove(firstShow) {\r\n    if (firstShow) {\r\n      // если нужно показать и удалить\r\n      setTimeout(() => {\r\n        this.setAnimation('getOut');\r\n      }, 500);\r\n      this.setAnimation('flip');\r\n    } else this.setAnimation('getOut'); // если нужно только удалить\r\n  }\r\n\r\n  setAnimation(animation) {\r\n    this.offsetWidth = undefined;\r\n    this.cardDOM.classList.toggle(animation);\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import Card from './Card';\r\nimport Timer from '../common/blocks/timer/Timer';\r\nimport GameEventsInterface from './GameEventsInterface';\r\n\r\nclass GameField {\r\n  constructor({ cardShortName, width, height }) {\r\n    this.gameFieldDOM = document.querySelector('.game_field');\r\n    this.cardShortName = cardShortName;\r\n    this.countOfCards = width * height;\r\n    this.cardTocompare = undefined; // карта ,с которой сраниваются кликнутые\r\n    this.gameTimer = new Timer(document.getElementsByClassName('timer')[0], 40);\r\n    this.gamePause = false;\r\n    // стили карт\r\n    this.imgs = [\r\n      'brint',\r\n      'curry',\r\n      'davis',\r\n      'duncan',\r\n      'granger',\r\n      'griffin',\r\n      'harden',\r\n      'iguodala',\r\n      'irving',\r\n      'jordan',\r\n      'mello',\r\n      'nowitzky',\r\n      'rose',\r\n      'wade',\r\n      'wall',\r\n    ];\r\n  }\r\n\r\n  fill() {\r\n    this.setShirtCard(this.cardShortName);\r\n\r\n    const cardPattern = document.createElement('div');\r\n    cardPattern.innerHTML = \"<div class='card_shirt'></div><div class='card_front'></div>\";\r\n    cardPattern.className = 'game_field__card';\r\n    cardPattern.dataset.animationStyle = 'none';\r\n\r\n    const randomValues = this.generateRandomValues();\r\n    randomValues.forEach((unickNumber) => {\r\n      // создаём элементы для каждой пары карточек и  применяем к ним стиль\r\n      // индекс стиля в массиссиве indexOf(style) = unickNumber\r\n      const cardDOM = cardPattern.cloneNode(true);\r\n      cardDOM.classList.add(`card_${this.imgs[unickNumber]}`);\r\n      this.gameFieldDOM.appendChild(cardDOM);\r\n    });\r\n    // вешаем обработчик кликов на grid-контейнер с карточками\r\n    this.clickOnCard = this.clickOnCard.bind(this);\r\n    this.clickOnCard.isItfirstClick = true; // при первом клике запуститься таймер\r\n    this.gameFieldDOM.addEventListener('click', this.clickOnCard);\r\n  }\r\n\r\n  compare(selectedCardDOM) {\r\n    // стиль, который отвечает за url с картинкой\r\n    const selectedCardStyleClass = selectedCardDOM.classList[1];\r\n    // получаем стиль картинки\r\n    const selectedCardStyle = selectedCardStyleClass.slice(selectedCardStyleClass.indexOf('_') + 1);\r\n    const selectedCard = new Card(this.imgs.indexOf(selectedCardStyle), selectedCardDOM);\r\n\r\n    if (!this.gamePause) {\r\n      switch (this.cardTocompare) {\r\n        case undefined: // открыли первую карту\r\n          this.cardTocompare = selectedCard;\r\n          selectedCard.flip();\r\n          break;\r\n        default:\r\n          // вторую\r\n          if (\r\n            this.cardTocompare.value === selectedCard.value &&\r\n            this.cardTocompare.cardDOM !== selectedCard.cardDOM\r\n          ) {\r\n            // если карты совпадают\r\n            this.setPause();\r\n            setTimeout(() => {\r\n              this.cardTocompare.remove(); // просто прячем\r\n              this.cardTocompare = undefined;\r\n            }, 500);\r\n            selectedCard.remove(true);\r\n            this.countOfCards += -2;\r\n          } else if (this.cardTocompare.value !== selectedCard.value) {\r\n            // не совпадают\r\n            this.setPause();\r\n            setTimeout(() => {\r\n              this.cardTocompare.flip(); // просто прячем\r\n              this.cardTocompare = undefined;\r\n            }, 500);\r\n            selectedCard.showAndHide(); // показываем и прячем карту\r\n          } else {\r\n            selectedCard.flip(); // кликнули 2 раза по одной и той же карте\r\n            this.cardTocompare = undefined;\r\n          }\r\n          break;\r\n      }\r\n      // win\r\n      if (!this.countOfCards) {\r\n        this.gameTimer.stop();\r\n        const time = { onOutput: this.gameTimer.toString(), ms: this.gameTimer.time };\r\n        GameEventsInterface.prototype.winningHandler(time);\r\n      }\r\n    }\r\n  }\r\n\r\n  setPause() {\r\n    this.gamePause = true;\r\n    setTimeout(() => {\r\n      this.gamePause = false;\r\n    }, 700);\r\n  }\r\n\r\n  runGameTimer() {\r\n    this.gameTimer.timerDOM.style.visibility = 'visible';\r\n    this.gameTimer.start();\r\n  }\r\n\r\n  clickOnCard(event) {\r\n    const { target } = event;\r\n    const isContains = target.closest('.game_field__card');\r\n\r\n    if (isContains) {\r\n      if (this.clickOnCard.isItfirstClick) {\r\n        this.runGameTimer();\r\n        this.clickOnCard.isItfirstClick = false;\r\n      }\r\n      this.compare(target.parentElement);\r\n    }\r\n  }\r\n\r\n  // заполняет массив парными значениями и рандомит их\r\n  generateRandomValues() {\r\n    const values = Array.from({ length: this.countOfCards }, (v, k) => Math.floor(k / 2)).sort(() => Math.random() - 0.5);\r\n    return values;\r\n  }\r\n\r\n  // генерация стилей, которые содержат css перменную со значением юрла до изображения\r\n  generateCardsStyles() {\r\n    const style = document.createElement('style');\r\n    style.type = 'text/css';\r\n    document.getElementsByTagName('head')[0].appendChild(style);\r\n\r\n    this.imgs.forEach((item, index) => {\r\n      const rule = `--card-front: url('../resources/img/cards-fronts/${item}.jpg');`;\r\n      style.sheet.insertRule(`.card_${item} {${rule}}`, index);\r\n    });\r\n  }\r\n\r\n  setShirtCard(shirtName) {\r\n    this.gameFieldDOM.style.setProperty(\r\n      '--card-shirt',\r\n      `url(\"../resources/img/shirts/${shirtName}.png\")`,\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameField;\r\n","import GameField from './GameField';\r\n\r\nclass Game {\r\n  constructor() {\r\n    this.gameField = null;\r\n    // в дальнейшем можно добавлять настройки игры\r\n    this.settings = { gameField: null, difficulty: null };\r\n  }\r\n\r\n  start() {\r\n    const difficultysInf = document.querySelector('.difficultys__item--active').dataset;\r\n    this.settings.gameField = {\r\n      width: difficultysInf.countOfColumns,\r\n      height: difficultysInf.countOfRows,\r\n      cardShortName: document.querySelector('.shirts__item--active').dataset.shirtName,\r\n    };\r\n    this.settings.difficulty = difficultysInf.value;\r\n\r\n    this.createGameField();\r\n    this.gameField.generateCardsStyles();\r\n  }\r\n\r\n  createGameField() {\r\n    const gameFieldDOM = document.createElement('div');\r\n    gameFieldDOM.className = 'game_field';\r\n    gameFieldDOM.style.setProperty('--count-of-columns', this.settings.gameField.width);\r\n\r\n    document.querySelector('.game-lobby').appendChild(gameFieldDOM);\r\n    this.gameField = new GameField(this.settings.gameField);\r\n    this.gameField.fill();\r\n  }\r\n\r\n  restart() {\r\n    const gameLobbyDOM = document.querySelector('.game-lobby');\r\n    gameLobbyDOM.innerHTML = '';\r\n    if (this.gameField.gameTimer) {\r\n      this.gameField.gameTimer.stop();\r\n      this.gameField.gameTimer.reset();\r\n    }\r\n    this.createGameField();\r\n  }\r\n\r\n  static updateScoreList() {}\r\n}\r\n\r\nexport default Game;\r\n","// минута наркомании....))\r\nconst whenReady = (() => {\r\n  let funcs = [];\r\n  let ready = false;\r\n\r\n  const handler = (e) => {\r\n    // Если обработчик уже вызывался, просто вернуть управление\r\n    if (ready) return;\r\n\r\n    // Если это событие readystatechange и состояние получило значение,\r\n    // отличное от \"complete\", значит, документ пока не готов\r\n    if (e.type === 'readystatechange' && document.readyState !== 'complete') return;\r\n\r\n    // Вызвать все зарегистрированные функции.\r\n    // каждый раз проверяется значение\r\n    // свойство funcs.length, на случай если одна из вызванных функций\r\n    // зарегистрирует дополнительные функции.\r\n    for (let i = 0; i < funcs.length; i++) funcs[i].call(document);\r\n\r\n    // Теперь можно установить флаг ready в значение true и забыть\r\n    // о зарегистрированных функциях\r\n    ready = true;\r\n    funcs = null;\r\n  };\r\n\r\n  // Зарегистрировать обработчик handler для всех ожидаемых событий\r\n  if (document.addEventListener) {\r\n    document.addEventListener('DOMContentLoaded', handler, false);\r\n    document.addEventListener('readystatechange', handler, false);\r\n    window.addEventListener('load', handler, false); // т.к. load вызывается после readystatechange ( когда readyState = complete)\r\n  } else if (document.attachEvent) {\r\n    // Если IE\r\n    document.attachEvent('onreadystatechange', handler);\r\n    window.attachEvent('onload', handler);\r\n  }\r\n\r\n  const onReady = (f) => {\r\n    if (ready) {\r\n      f.call(document); // Вызвать функцию, если документ готов\r\n    } else funcs.push(f); // Иначе добавить ее в очередь, чтобы вызвать позже\r\n  };\r\n\r\n  return onReady;\r\n})();\r\n\r\nexport default whenReady;\r\n","import whenReady from './whenReady';\r\nimport GameEventsInterface from './GameEventsInterface';\r\nimport Game from './Game';\r\n\r\nconst getGameElements = () => {\r\n  const elements = {\r\n    authorizationField: document\r\n      .getElementById('authorization_doc')\r\n      .import.querySelector('.authorization-field'), // поле авторизации\r\n    gameRulesModalWindow: document\r\n      .getElementById('game_rules_modal_doc')\r\n      .import.querySelector('.modal_window--game_rules'), // модальное окно правил игры\r\n    winnerModalWindow: document\r\n      .getElementById('winner_modal_doc')\r\n      .import.querySelector('.modal_window--winner'), // модальное окно победителя\r\n    userProfile: document.querySelector('.header__user_profile'), // меню-профиль пользователя\r\n    exitGameBtn: document.querySelector('.exit_game_button'), // кнопка закрытия игры\r\n    gameRulesBtn: document.querySelector('.game_rules_button'), // кнопка открытия правил игры\r\n    shirtsList: document.querySelector('.shirts'), // выбор рубашек карт\r\n    difficultysList: document.querySelector('.difficultys'), // выбор сложности игры\r\n    scoreTable: document.querySelector('.score_table'), // таблица результатов\r\n  };\r\n  return elements;\r\n};\r\n\r\nconst main = () => {\r\n  const game = new Game();\r\n  const gameInterfaceEvents = new GameEventsInterface(getGameElements(), game);\r\n\r\n  gameInterfaceEvents.initGameRulesModalWindow();\r\n  gameInterfaceEvents.initWinnerModalWindow();\r\n  gameInterfaceEvents.changeModalWindowState.call(gameInterfaceEvents.gameRulesModalWindow, {\r\n    stateName: 'expand',\r\n    flag: 'open',\r\n  });\r\n  gameInterfaceEvents.initScoreList();\r\n  // if user has already authorized\r\n  if (localStorage.getItem('user')) {\r\n    gameInterfaceEvents.showUserProfile();\r\n    game.start();\r\n  } else {\r\n    gameInterfaceEvents.showAuthorizationField(); // показать поле авторизации\r\n    document.getElementsByClassName('form-authorization')[0].addEventListener('submit', (event) => {\r\n      // только после того как пользователь валидно заполнит форму и нажмёт \"Start\",\r\n      // начнётся инициализаци игры\r\n      const promise = new Promise((resolve) => {\r\n        gameInterfaceEvents.signIn();\r\n        event.preventDefault();\r\n        resolve();\r\n      });\r\n      promise.then(() => {\r\n        game.start();\r\n      });\r\n      event.preventDefault(); // preventDefault on submit\r\n    });\r\n  }\r\n};\r\n\r\nwhenReady(main);\r\n"],"sourceRoot":""}