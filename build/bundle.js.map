{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app/common/blocks/timer/Timer.js","webpack:///./app/js/Card.js","webpack:///./app/js/GameField.js","webpack:///./app/js/Game.js","webpack:///./app/js/GameEventsInterface.js","webpack:///./app/js/whenReady.js","webpack:///./app/js/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Timer","timerDOM","delay","_classCallCheck","this","isOn","time","interval","offset","_this","style","visibility","setInterval","update","Date","now","clearInterval","stop","reset","timePassed","delta","formattedTime","timeFormater","textContent","minutes","getMinutes","toString","seconds","getSeconds","milliseconds","getMilliseconds","length","Card","cardDOM","setAnimation","firstShow","setTimeout","dataset","animationStyle","animationName","offsetWidth","GameField","_ref","cardShortName","width","height","gameFieldDOM","document","querySelector","countOfCards","cardTocompare","undefined","gameTimer","_Timer2","default","imgs","setShirtCard","cardPattern","createElement","className","generateRandomValues","forEach","unickNumber","cloneNode","classList","add","appendChild","clickOnCard","bind","isItfirstClick","addEventListener","selectedCardDOM","selectedCardStyleClass","selectedCardStyle","slice","indexOf","selectedCard","_Card2","show","remove","hide","start","event","runGameTimer","target","contains","compare","Array","from","v","k","Math","floor","sort","random","type","getElementsByTagName","item","index","rule","sheet","insertRule","shirtName","setProperty","_GameField","Game","gameField","settings","difficultysInf","countOfColumns","countOfRows","createGameField","generateCardsStyles","_GameField2","fill","innerHTML","GameInterfaceEvents","elements","game","authorizationField","gameRulesModalWindow","winnerModalWindow","userProfile","exitGameBtn","gameRulesBtn","shirtsList","difficultysList","scoreTable","signIn","selectUserProfileOptions","selectGameOptions","difficultysItemClassName","shirtsItemClassName","selectedItem","closest","gameOptionName","parentNode","activeItemStyleName","changeGameSettings","responsibleItemDOM","restart","action","signOut","user","firstName","secondName","email","localStorage","setItem","JSON","stringify","profileLinkUserFullName","parse","getItem","createTextNode","saveUserCredentials","showUserProfile","removeItem","firstChild","showAuthorizationField","scoreList","row","tBodies","insertRow","insertCell","fullName","score","body","changeModalWindowState","_ref2","_slicedToArray","stateName","flag","state","whenReady","funcs","ready","handler","e","readyState","window","attachEvent","f","push","_whenReady2","_Game2","gameInterfaceEvents","_GameEventsInterface2","getElementById","import","initGameRulesModalWindow","initWinnerModalWindow","initScoreList","Promise","resolve","then","result","console","log"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/build/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","class Timer {\r\n  constructor(timerDOM, delay) {\r\n    this.timerDOM = timerDOM;\r\n    this.delay = delay;\r\n    this.isOn = false;\r\n    this.time = 0;\r\n    this.interval = null;\r\n    this.offset = null;\r\n  }\r\n\r\n  start() {\r\n    if (!this.isOn) {\r\n      this.timerDOM.style.visibility = 'visible';\r\n      this.interval = setInterval(() => this.update(), this.delay);\r\n      this.offset = Date.now();\r\n      this.isOn = true;\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    if (this.isOn) {\r\n      clearInterval(this.interval);\r\n      this.interval = null;\r\n      this.isOn = false;\r\n    }\r\n  }\r\n\r\n  hide() {\r\n    this.stop();\r\n    this.reset();\r\n    this.timerDOM.style.visibility = 'hidden';\r\n  }\r\n\r\n  reset() {\r\n    this.time = 0;\r\n    this.update();\r\n  }\r\n\r\n  delta() {\r\n    const now = Date.now();\r\n    const timePassed = now - this.offset;\r\n    this.offset = now;\r\n    return timePassed;\r\n  }\r\n\r\n  update() {\r\n    if (this.isOn) this.time += this.delta();\r\n    const formattedTime = this.timeFormater();\r\n    this.timerDOM.textContent = formattedTime;\r\n  }\r\n\r\n  timeFormater() {\r\n    const time = new Date(this.time);\r\n    let minutes = time.getMinutes().toString();\r\n    let seconds = time.getSeconds().toString();\r\n    let milliseconds = time.getMilliseconds().toString();\r\n\r\n    if (minutes.length < 2) {\r\n      minutes = `0${minutes}`;\r\n    }\r\n\r\n    if (seconds.length < 2) {\r\n      seconds = `0${seconds}`;\r\n    }\r\n\r\n    while (milliseconds.length < 3) {\r\n      milliseconds = `0${milliseconds}`;\r\n    }\r\n\r\n    return `${minutes} : ${seconds} . ${milliseconds}`;\r\n  }\r\n}\r\n\r\nexport default Timer;\r\n","class Card {\r\n  constructor(value, cardDOM) {\r\n    this.value = value; // уникальное значение карточки\r\n    this.cardDOM = cardDOM;\r\n  }\r\n\r\n  show() {\r\n    this.setAnimation('flipIn');\r\n  }\r\n\r\n  hide(firstShow) {\r\n    let time;\r\n    if (firstShow) {\r\n      // если нужно показать и спрятать\r\n      this.setAnimation('flipInOut');\r\n      time = 2000; // 2000\r\n    } else {\r\n      // если нужно только спрятать\r\n      this.setAnimation('flipOut');\r\n      time = 1000; // 1000\r\n    }\r\n    setTimeout(() => {\r\n      // таймаут нужен, чтобы дать завершиться перевороту\r\n      this.cardDOM.dataset.animationStyle = 'none';\r\n    }, time);\r\n  }\r\n\r\n  remove(firstShow) {\r\n    if (firstShow) {\r\n      // если нужно показать и удалить\r\n      this.setAnimation('showAndRemove');\r\n    } else this.setAnimation('getOut'); // если нужно только удалить\r\n    // this.cardDOM.onclick = () => {};\r\n  }\r\n\r\n  setAnimation(animationName) {\r\n    this.cardDOM.dataset.animationStyle = 'none';\r\n    if (animationName === 'showAndRemove') this.cardDOM.style.visibility = 'hidden';\r\n    void this.offsetWidth;\r\n    this.cardDOM.dataset.animationStyle = animationName;\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import Card from './Card';\r\nimport Timer from '../common/blocks/timer/Timer';\r\n\r\nclass GameField {\r\n  constructor({ cardShortName, width, height }) {\r\n    this.gameFieldDOM = document.querySelector('.game_field');\r\n    this.cardShortName = cardShortName;\r\n    this.countOfCards = width * height;\r\n    this.cardTocompare = undefined; // карта ,с которой сраниваются кликнутые\r\n    this.gameTimer = new Timer(document.querySelector('.timer'), 40);\r\n    // стили карт\r\n    this.imgs = [\r\n      'brint',\r\n      'curry',\r\n      'davis',\r\n      'duncan',\r\n      'granger',\r\n      'griffin',\r\n      'harden',\r\n      'iguodala',\r\n      'irving',\r\n      'jordan',\r\n      'mello',\r\n      'nowitzky',\r\n      'rose',\r\n      'wade',\r\n      'wall',\r\n    ];\r\n  }\r\n\r\n  fill() {\r\n    this.setShirtCard(this.cardShortName);\r\n\r\n    const cardPattern = document.createElement('div');\r\n    cardPattern.className = 'game_field__card';\r\n    cardPattern.dataset.animationStyle = 'none';\r\n\r\n    const randomValues = this.generateRandomValues();\r\n    randomValues.forEach((unickNumber) => {\r\n      // создаём элементы для каждой пары карточек и  применяем к ним стиль\r\n      // индекс стиля в массиссиве indexOf(style) = unickNumber\r\n      const cardDOM = cardPattern.cloneNode(true);\r\n      cardDOM.classList.add(`card_${this.imgs[unickNumber]}`);\r\n      this.gameFieldDOM.appendChild(cardDOM);\r\n    });\r\n\r\n    // вешаем обработчик кликов на grid-контейнер с карточками, используем паттерн \"поведение\"\r\n    this.clickOnCard = this.clickOnCard.bind(this);\r\n    this.clickOnCard.isItfirstClick = true; // при первом клике запуститься таймер\r\n    this.gameFieldDOM.addEventListener('click', this.clickOnCard);\r\n  }\r\n\r\n  compare(selectedCardDOM) {\r\n    // стиль, который отвечает за url с картинкой\r\n    const selectedCardStyleClass = selectedCardDOM.classList[1];\r\n    // получаем стиль картинки\r\n    const selectedCardStyle = selectedCardStyleClass.slice(selectedCardStyleClass.indexOf('_') + 1);\r\n    const selectedCard = new Card(this.imgs.indexOf(selectedCardStyle), selectedCardDOM);\r\n\r\n    switch (this.cardTocompare) {\r\n      case undefined: // открыли первую карту\r\n        this.cardTocompare = selectedCard;\r\n        selectedCard.show();\r\n        break;\r\n      default:\r\n        // вторую\r\n        if (\r\n          this.cardTocompare.value === selectedCard.value &&\r\n          this.cardTocompare.cardDOM !== selectedCard.cardDOM\r\n        ) {\r\n          // если карты совпадают\r\n          this.countOfCards += -2;\r\n          selectedCard.remove(true); // показываем и удаляем\r\n          this.cardTocompare.remove(false); // просто удаляем\r\n        } else if (this.cardTocompare.value !== selectedCard.value) {\r\n          // не совпадают\r\n          selectedCard.hide(true); // показываем и прячем карту\r\n          this.cardTocompare.hide(false); // просто прячем\r\n        } else {\r\n          selectedCard.hide(false); // кликнули 2 раза по одной и той же карте\r\n        }\r\n        this.cardTocompare = undefined;\r\n        break;\r\n    }\r\n\r\n    // win\r\n    if (!this.countOfCards) {\r\n      this.gameTimer.stop();\r\n      // Game.updateScoreList();\r\n      // Game.winnnerModalWindow();\r\n    }\r\n  }\r\n\r\n  runGameTimer() {\r\n    this.gameTimer.timerDOM.style.visibility = 'visible';\r\n    this.gameTimer.start();\r\n  }\r\n\r\n  clickOnCard(event) {\r\n    if (this.clickOnCard.isItfirstClick) {\r\n      this.runGameTimer();\r\n      this.clickOnCard.isItfirstClick = false;\r\n    }\r\n    const { target } = event;\r\n    const isContains = target.classList.contains('game_field__card');\r\n    if (!isContains) return;\r\n    this.compare(target);\r\n  }\r\n\r\n  // заполняет массив парными значениями и рандомит их\r\n  generateRandomValues() {\r\n    const values = Array.from({ length: this.countOfCards }, (v, k) => Math.floor(k / 2)).sort(() => Math.random() - 0.5);\r\n    return values;\r\n  }\r\n\r\n  // генерация стилей, которые содержат css перменную со значением юрла до изображения\r\n  generateCardsStyles() {\r\n    const style = document.createElement('style');\r\n    style.type = 'text/css';\r\n    document.getElementsByTagName('head')[0].appendChild(style);\r\n\r\n    this.imgs.forEach((item, index) => {\r\n      const rule = `--card-front: url('../resources/img/cards-fronts/${item}.jpg');`;\r\n      style.sheet.insertRule(`.card_${item} {${rule}}`, index);\r\n    });\r\n  }\r\n\r\n  setShirtCard(shirtName) {\r\n    this.gameFieldDOM.style.setProperty(\r\n      '--card-shirt',\r\n      `url(\"../resources/img/shirts/${shirtName}.png\")`,\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameField;\r\n","import GameField from './GameField';\r\n\r\nclass Game {\r\n  constructor() {\r\n    this.gameField = null;\r\n    this.settings = { gameField: null }; // в дальнейшем можно добавлять настройки игры\r\n  }\r\n\r\n  start() {\r\n    const difficultysInf = document.querySelector('.difficultys__item--active').dataset;\r\n    this.settings.gameField = {\r\n      width: difficultysInf.countOfColumns,\r\n      height: difficultysInf.countOfRows,\r\n      cardShortName: document.querySelector('.shirts__item--active').dataset.shirtName,\r\n    };\r\n\r\n    this.createGameField();\r\n    this.gameField.generateCardsStyles();\r\n  }\r\n\r\n  createGameField() {\r\n    const gameFieldDOM = document.createElement('div');\r\n    gameFieldDOM.className = 'game_field';\r\n    gameFieldDOM.style.setProperty('--count-of-columns', this.settings.gameField.width);\r\n\r\n    document.querySelector('.game-lobby').appendChild(gameFieldDOM);\r\n    this.gameField = new GameField(this.settings.gameField);\r\n    this.gameField.fill();\r\n  }\r\n\r\n  restart() {\r\n    const gameLobbyDOM = document.querySelector('.game-lobby');\r\n    gameLobbyDOM.innerHTML = '';\r\n    if (this.gameField.gameTimer) {\r\n      this.gameField.gameTimer.stop();\r\n      this.gameField.gameTimer.reset();\r\n    }\r\n    this.createGameField();\r\n  }\r\n\r\n  static updateScoreList() {}\r\n}\r\n\r\nexport default Game;\r\n","class GameInterfaceEvents {\r\n  constructor(elements, game) {\r\n    ({\r\n      authorizationField: this.authorizationField,\r\n      gameRulesModalWindow: this.gameRulesModalWindow,\r\n      winnerModalWindow: this.winnerModalWindow,\r\n      userProfile: this.userProfile,\r\n      exitGameBtn: this.exitGameBtn,\r\n      gameRulesBtn: this.gameRulesBtn,\r\n      shirtsList: this.shirtsList,\r\n      difficultysList: this.difficultysList,\r\n      scoreTable: this.scoreTable,\r\n    } = elements);\r\n    this.game = game;\r\n\r\n    // this.showGameRulesModalWindow = this.showGameRulesModalWindow.bind(this);\r\n    this.signIn = this.signIn.bind(this);\r\n    this.selectUserProfileOptions = this.selectUserProfileOptions.bind(this);\r\n\r\n    this.selectGameOptions = this.selectGameOptions.bind(this);\r\n    this.shirtsList.addEventListener('click', this.selectGameOptions);\r\n    this.difficultysList.addEventListener('click', this.selectGameOptions);\r\n\r\n    this.userProfile\r\n      .querySelector('.user_profile_menu')\r\n      .addEventListener('click', this.selectUserProfileOptions);\r\n  }\r\n\r\n  selectGameOptions(event) {\r\n    const { target } = event;\r\n    const difficultysItemClassName = `.${this.difficultysList.className}__item`;\r\n    const shirtsItemClassName = `.${this.shirtsList.className}__item  `;\r\n    const selectedItem =\r\n      target.closest(difficultysItemClassName) || target.closest(shirtsItemClassName);\r\n\r\n    if (selectedItem) {\r\n      const gameOptionName = selectedItem.parentNode.className;\r\n      const activeItemStyleName = `${gameOptionName}__item--active`;\r\n\r\n      const currentActiveItem = selectedItem.parentNode.querySelector(`.${activeItemStyleName}`);\r\n      currentActiveItem.classList.remove(activeItemStyleName);\r\n      selectedItem.classList.add(activeItemStyleName);\r\n\r\n      // если игра уже запущена - меняем настройки игры\r\n      if (this.game.gameField) this.changeGameSettings(gameOptionName);\r\n    }\r\n  }\r\n\r\n  changeGameSettings(gameOptionName) {\r\n    const responsibleItemDOM = document.querySelector(`.${gameOptionName}__item--active`);\r\n    switch (gameOptionName) {\r\n      case 'difficultys':\r\n        this.game.settings.gameField.width = responsibleItemDOM.dataset.countOfColumns;\r\n        this.game.settings.gameField.height = responsibleItemDOM.dataset.countOfRows;\r\n        this.game.restart();\r\n        break;\r\n      case 'shirts':\r\n        this.game.gameField.setShirtCard(responsibleItemDOM.dataset.shirtName);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  selectUserProfileOptions(event) {\r\n    const { target } = event;\r\n    const selectedOption = target.closest('.profile_menu_link');\r\n\r\n    switch (selectedOption.dataset.action) {\r\n      case 'signOut':\r\n        this.signOut();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  saveUserCredentials() {\r\n    const firstName = this.authorizationField.querySelector('.firstName-field').value;\r\n    const secondName = this.authorizationField.querySelector('.secondName-field').value;\r\n    const email = this.authorizationField.querySelector('.email-field').value;\r\n\r\n    const user = {\r\n      firstName,\r\n      secondName,\r\n      email,\r\n    };\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n  }\r\n\r\n  showUserProfile() {\r\n    const profileLinkUserFullName = this.userProfile.querySelector('.profile_link__user_fullName');\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    profileLinkUserFullName.appendChild(document.createTextNode(`${user.firstName} ${user.secondName}`));\r\n    this.userProfile.style.visibility = 'visible';\r\n  }\r\n\r\n  showAuthorizationField() {\r\n    document.querySelector('.game-lobby').appendChild(this.authorizationField);\r\n  }\r\n\r\n  // closeGame() {\r\n  //   window.open('', '_self').close();\r\n  // }\r\n\r\n  signIn() {\r\n    // event.preventDefault(); // disable page refreshing\r\n    this.saveUserCredentials();\r\n    this.showUserProfile();\r\n    this.authorizationField.remove();\r\n  }\r\n\r\n  signOut() {\r\n    localStorage.removeItem('user');\r\n    this.userProfile.querySelector('.profile_link__user_fullName').firstChild.remove();\r\n    this.userProfile.style.visibility = 'hidden';\r\n    this.game.gameField.gameFieldDOM.remove();\r\n    if (this.game.gameField.gameTimer.isOn) {\r\n      this.game.gameField.gameTimer.hide();\r\n    }\r\n    this.showAuthorizationField();\r\n  }\r\n\r\n  initScoreList() {\r\n    const scoreList = JSON.parse(localStorage.getItem('scoreList'));\r\n    if (scoreList) {\r\n      for (let i = 0; i < scoreList.length; i++) {\r\n        const row = this.scoreTable.tBodies[0].insertRow(i);\r\n        const cellFullName = row.insertCell(0);\r\n        cellFullName.innerHTML = scoreList[i].fullName;\r\n        const cellScore = row.insertCell(1);\r\n        cellScore.innerHTML = scoreList[i].score;\r\n        const cellTime = row.insertCell(2);\r\n        cellTime.innerHTML = scoreList[i].time;\r\n      }\r\n    }\r\n  }\r\n\r\n  initGameRulesModalWindow() {\r\n    document.body.appendChild(this.gameRulesModalWindow);\r\n    this.gameRulesBtn.addEventListener(\r\n      'click',\r\n      this.changeModalWindowState.bind(this.gameRulesModalWindow, ['expand', 'open']),\r\n    );\r\n    this.gameRulesModalWindow.addEventListener(\r\n      'click',\r\n      this.changeModalWindowState.bind(this.gameRulesModalWindow, ['collapse', 'close']),\r\n    );\r\n  }\r\n\r\n  initWinnerModalWindow() {\r\n    document.body.appendChild(this.winnerModalWindow);\r\n    const playAgaintBtn = this.winnerModalWindow.querySelector('.play_again_btn');\r\n\r\n    // this.exitGameBtn.addEventListener(\r\n    //   'click',\r\n    //   this.changeModalWindowState.bind(this.winnerModalWindow, ['run', 'open']),\r\n    // );\r\n    playAgaintBtn.addEventListener(\r\n      'click',\r\n      this.changeModalWindowState.bind(this.winnerModalWindow, ['runaway', 'close']),\r\n    );\r\n  }\r\n\r\n  // stateName - название анимации(на открытие/закрытие), flag - открыть/закрыть\r\n  changeModalWindowState([stateName, flag]) {\r\n    this.dataset.state = stateName;\r\n    switch (flag) {\r\n      case 'open':\r\n        document.body.classList.add('modal-active');\r\n        break;\r\n      case 'close':\r\n        document.body.classList.remove('modal-active');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  static showWinnerModalWindow() {}\r\n}\r\n\r\nexport default GameInterfaceEvents;\r\n","// минута наркомании....))\r\nconst whenReady = (() => {\r\n  let funcs = [];\r\n  let ready = false;\r\n\r\n  const handler = (e) => {\r\n    // Если обработчик уже вызывался, просто вернуть управление\r\n    if (ready) return;\r\n\r\n    // Если это событие readystatechange и состояние получило значение,\r\n    // отличное от \"complete\", значит, документ пока не готов\r\n    if (e.type === 'readystatechange' && document.readyState !== 'complete') return;\r\n\r\n    // Вызвать все зарегистрированные функции.\r\n    // каждый раз проверяется значение\r\n    // свойство funcs.length, на случай если одна из вызванных функций\r\n    // зарегистрирует дополнительные функции.\r\n    for (let i = 0; i < funcs.length; i++) funcs[i].call(document);\r\n\r\n    // Теперь можно установить флаг ready в значение true и забыть\r\n    // о зарегистрированных функциях\r\n    ready = true;\r\n    funcs = null;\r\n  };\r\n\r\n  // Зарегистрировать обработчик handler для всех ожидаемых событий\r\n  if (document.addEventListener) {\r\n    document.addEventListener('DOMContentLoaded', handler, false);\r\n    document.addEventListener('readystatechange', handler, false);\r\n    window.addEventListener('load', handler, false); // т.к. load вызывается после readystatechange ( когда readyState = complete)\r\n  } else if (document.attachEvent) {\r\n    // Если IE\r\n    document.attachEvent('onreadystatechange', handler);\r\n    window.attachEvent('onload', handler);\r\n  }\r\n\r\n  const onReady = (f) => {\r\n    if (ready) {\r\n      f.call(document); // Вызвать функцию, если документ готов\r\n    } else funcs.push(f); // Иначе добавить ее в очередь, чтобы вызвать позже\r\n  };\r\n\r\n  return onReady;\r\n})();\r\n\r\nexport default whenReady;\r\n","import whenReady from './whenReady';\r\nimport GameEventsInterface from './GameEventsInterface';\r\nimport Game from './Game';\r\n\r\nconst getGameElements = () => {\r\n  const elements = {\r\n    authorizationField: document\r\n      .getElementById('authorization_doc')\r\n      .import.querySelector('.authorization-field'), // поле авторизации\r\n    gameRulesModalWindow: document\r\n      .getElementById('game_rules_modal_doc')\r\n      .import.querySelector('.modal_window--game_rules'), // модальное окно правил игры\r\n    winnerModalWindow: document\r\n      .getElementById('winner_modal_doc')\r\n      .import.querySelector('.modal_window--winner'), // модальное окно победителя\r\n    userProfile: document.querySelector('.header__user_profile'), // меню-профиль пользователя\r\n    exitGameBtn: document.querySelector('.exit_game_button'), // кнопка закрытия игры\r\n    gameRulesBtn: document.querySelector('.game_rules_button'), // кнопка открытия правил игры\r\n    shirtsList: document.querySelector('.shirts'), // выбор рубашек карт\r\n    difficultysList: document.querySelector('.difficultys'), // выбор сложности игры\r\n    scoreTable: document.querySelector('.score_table'), // таблица результатов\r\n  };\r\n  return elements;\r\n};\r\n\r\nconst main = () => {\r\n  const game = new Game();\r\n  const gameInterfaceEvents = new GameEventsInterface(getGameElements(), game);\r\n\r\n  gameInterfaceEvents.initGameRulesModalWindow();\r\n  gameInterfaceEvents.initWinnerModalWindow();\r\n  gameInterfaceEvents.initScoreList();\r\n  // if user has already authorized\r\n  if (localStorage.getItem('user')) {\r\n    gameInterfaceEvents.showUserProfile();\r\n    game.start();\r\n  } else {\r\n    gameInterfaceEvents.showAuthorizationField(); // показать поле авторизации\r\n    document.querySelector('.form-authorization').addEventListener('submit', () => {\r\n      // только после того как пользователь валидно заполнит форму и нажмёт \"Start\",\r\n      // начнётся инициализаци игры\r\n      const promise = new Promise((resolve) => {\r\n        gameInterfaceEvents.signIn();\r\n        resolve('Vse ok');\r\n      });\r\n      promise.then((result) => {\r\n        console.log(`Fulfilled: ${result}`); // result - аргумент resolve\r\n        game.start();\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\nwhenReady(main);\r\n// document.getElementById('exitGameBtn').addEventListener('click', gameElements.closeGame);\r\n"],"sourceRoot":""}